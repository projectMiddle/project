name: Build and Push Docker Images

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Backend Maven Build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 권한 부여
      - name: Grant execute permission for mvnw
        working-directory: soltech/project
        run: chmod +x mvnw

      # aud-7 설치
      - name: Install aud7-embedded jar
        working-directory: soltech/project
        shell: bash
        run: |
          echo "[DEBUG] pwd = $(pwd)"
          ls -al libs || true
          test -f libs/aud7-embedded.jar || (echo "❌ libs/aud7-embedded.jar not found"; exit 1)

          ./mvnw install:install-file \
            -Dfile=libs/aud7-embedded.jar \
            -DgroupId=com.matrix \
            -DartifactId=aud7-embedded \
            -Dversion=1.0.0 \
            -Dpackaging=jar
      
      # Querydsl Q 클래스 생성
      - name: Generate Querydsl Q classes
        working-directory: soltech/project
        run: |
          ./mvnw -B com.mysema.maven:apt-maven-plugin:1.1.3:process \
            -DoutputDirectory=target/generated-sources/annotations \
            -Dprocessor=com.querydsl.apt.jpa.JPAAnnotationProcessor
          echo "[DEBUG] Generated Q classes:"
          ls -R target/generated-sources/annotations || true

      # Backend Build
      - name: Build backend with Maven
        working-directory: soltech/project
        run: ./mvnw -B clean package -DskipTests

      # Build & Push Backend
      - name: Build & Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/soltech-final-backend:latest \
            -f soltech/project/Dockerfile soltech/project
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/soltech-final-backend:latest

      # Build frontend
      - name: Build frontend
        working-directory: soltechreact
        run: |
          yarn install --frozen-lockfile
          yarn build

      # Build & Push Frontend
      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/soltech-final-frontend:latest \
            -f soltechreact/Dockerfile soltechreact
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/soltech-final-frontend:latest

      # EC2 접속 후 배포 (SQL 문도 같이)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app

            # 기존 서비스 종료
            docker compose down

            # 사용하지 않는 이미지/컨테이너/네트워크/볼륨 정리
            docker system prune -af --volumes

            # secrets에서 env 파일 생성
            echo "${{ secrets.DOCKER_ENV_DB }}" > db.env
            echo "${{ secrets.DOCKER_ENV_GOOGLE }}" > google.env
            echo "${{ secrets.DOCKER_ENV_JWT }}" > jwt.env

            # 최신 이미지 pull
            docker compose pull

            # 서비스 재시작 (mysql + backend + frontend)
            docker compose up -d --build

